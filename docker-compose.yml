volumes:
  base-data:
  ciex-db-data:
  redis-data:

services:
  ciex-db:
    image: postgres:15-alpine
    env_file:
      - .env
    restart: always
    ports:
      - '5431:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ciex-db-data:/var/lib/postgresql/data

    

  ciex-backend:
    restart: always
    env_file:
      - .env
    build:
      context: ./ciex-backend
      dockerfile: ./Dockerfile
      args:
        env: ${ENV}
    ports:
      - "8666:8000"
    command: |
        bash -c "
        gunicorn src.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --log-level=debug --timeout=60 --reload"
    depends_on:
      ciex-db:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=0
    volumes:
      - base-data:/data
      - ./ciex-backend/src:/code/src
      - ./ciex-backend/tests:/code/tests
      - ./ciex-backend/alembic.ini:/code/alembic.ini
      - ./ciex-backend/logconfig.yml:/code/logconfig.yml
  redis:
    restart: always
    image: redis:7-alpine
    volumes:
      - redis-data:/data

  celery:
    restart: always
    build: ./ciex-backend
    command: celery --app=src worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - ciex-backend
      - redis
  beat:
    restart: always
    build: ./ciex-backend
    command: celery --app=src beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - ciex-backend
      - redis
